-----------------------------------------------------------------------------------------------------
---------------------------- Learning #Linux Command Line - 2023 ------------------------------------
-----------------------------------------------------------------------------------------------------

Commands ¬ Are programs that take a particular action
Options ¬ Tell the command how to operate, often begin with a dash or minus sign (like -e or -s [commonly used by one lettter or number])
Options continue ¬ It also can have multiple options like e.g [ ls -l -a -h] best option: [ls -lah] the order doesn't matter it can be even [ls -ahl (it does the same action)]
Options continue v-3 ¬ Having options with '--' means it can't be combined together, it must have space to add another option.
Arguments ¬ This is where it tells command what part to operate on, usually its a file or path or set of files or directories.

[---------- General Commmand Syntax ----------
command     option(s)    argument(s)

  ls          -l            
  sort        -u          users.txt
---------------------------------------------]

Text Navigation Shorcuts for Command Line ---:
Ctrl-U (^U) ¬ Delete from cursor to line start
Ctrl-K (^K) ¬ Delete from cursor to line end
Ctrl-Shift-C (Ctrl^C) ¬ Copy selected text to clipboard
Ctrl-Shift-V (Ctrl^V) ¬ Paste text from clipboard
Ctrl-R (Ctrl-R) ¬ Search command history
Ctrl-C (Ctrl-C) ¬ Cancel command
----------------------------------------------

-----------------------------------------------------------------------------------------------------
---------------------------- Files, Directories and Permissions -------------------------------------
-----------------------------------------------------------------------------------------------------

[---------- Commands for file information ----------
file - determine file type 
stat - display file status
---------------------------------------------------]

[---------- Notable File System Directories ----------
- File system root: '/'
      ¬ Contains all other directories
      ¬ Highest level of the file system hierarchy

- User home directories: /home
      ¬ Location where each user's personal files are stored
      ¬ Each user has their own directory within /home/
      ¬ In Bash and many other shells, each user's own home directory is represented by the tilde '~' character
      ¬ The home directory often contains subdirectories like Documents, Downloads and Pictures

¬ Common configuration files: '/etc'
¬ Common programs or commands: /bin,/sbin
¬ Shared libraries and modules stored: '/lib'
¬ Standard location for mounting other file systems: '/mnt,/media'
¬ Kernel and system information: '/dev,/proc,' and '/sys'
---------------------------------------------------]

[---------- Paths on Linux ----------
¬ A path represents the location of a file or directory
¬ Paths use the slash character '/' as a separator between directory or file names
- Paths can be absolute or relative
      Abosulute:
      ¬ Begins from the root of the file system
      ¬ Defines an explicit location on the file system
            (example how abolute path looks)
                     /home/scott/      ---> absolute path to scott, a slash '/' at the beginning indicates an absolute path
                     /home/scott/Documents ---> absolute path to documents
      Relative:
      ¬ Begin from the current working directory
      ¬ If the current working directory changes, the path of it changes also
            (example how relative path looks)
                    Working directory: /home/scott, Relative Path: 'Documents', How it would look: /home/scott/Documents
                                      IMPORTANT: relative path doesn't have '/' in the front that would it makes relative path

      ¬ The name '..' refers to the parent directory of the current working directory
            (example how it would look)
                    Working directory: /home/scott, relative path: '..', Results abosulte path: '/home'
                    Working directory: /home/scott/Documents, relative path: '..', Results abosulte path: '/home/scott'
---------------------------------------------------]
